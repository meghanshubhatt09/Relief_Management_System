/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Emergency.FireDepartment;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FireDepartment.FireDepartment;
import Business.FireDepartment.FireDepartmentDirectory;
import Business.Organization.OrganizationDirectory;
import Business.PoliceStation.PoliceStation;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arjun
 */
public class ManageFireStationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFireStationJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
    public ManageFireStationJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory,Enterprise enterprise,UserAccount userAccount,EcoSystem ecoSystem) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        populateFireDepartmentTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPolice = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUnitSize = new javax.swing.JTextField();
        unitTypeComboBox = new javax.swing.JComboBox<>();
        btnAddDoctor = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnDeleteDoctor = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblPolice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Force", "Unit Strength"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPolice);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Unit Type :");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Unit Size :");

        txtUnitSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUnitSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitSizeActionPerformed(evt);
            }
        });

        unitTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Response", "Patrol team", "Emergency Dispatch" }));

        btnAddDoctor.setBackground(new java.awt.Color(102, 217, 255));
        btnAddDoctor.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAddDoctor.setText("Add");
        btnAddDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDoctorActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/administratorBig.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Myanmar MN", 1, 24)); // NOI18N
        jLabel1.setText("Manage Fire Station");

        btnBack.setBackground(new java.awt.Color(102, 217, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeleteDoctor.setBackground(new java.awt.Color(255, 153, 153));
        btnDeleteDoctor.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnDeleteDoctor.setText("Delete Record");
        btnDeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUnitSize)
                                    .addComponent(unitTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(btnAddDoctor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(btnDeleteDoctor)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteDoctor)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(unitTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUnitSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUnitSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitSizeActionPerformed

    private void btnAddDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDoctorActionPerformed
        // TODO add your handling code here:
        int flag = 0;
        
        
        try{
            if(Integer.parseInt(txtUnitSize.getText()) <= 0 ){
        JOptionPane.showMessageDialog(null, "Enter Proper value", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
            
        } catch( NumberFormatException n){
        JOptionPane.showMessageDialog(null, "Enter Proper numeric value", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        if(!unitTypeComboBox.getSelectedItem().toString().equals("")){

            System.out.println("check a");
            
            if(ecoSystem.getFireDepartmentDirectory().getFireDepartmentList().size() == 0){
            System.out.println("check b");
                FireDepartment fireDepartment = ecoSystem.getFireDepartmentDirectory().addFireDepartment()  ;
                fireDepartment.setFireDepartmentType(unitTypeComboBox.getSelectedItem().toString());  
                fireDepartment.setUnitCount(Integer.parseInt(txtUnitSize.getText())); 
                populateFireDepartmentTable();
                
            } else{
            System.out.println("check c");
                for (FireDepartment fireDepartment1 : ecoSystem.getFireDepartmentDirectory().getFireDepartmentList() ) {
               System.out.println("check d");
                 if(fireDepartment1.getFireDepartmentType().equals(unitTypeComboBox.getSelectedItem().toString())){
                     System.out.println("check e");
                     fireDepartment1.setUnitCount(fireDepartment1.getUnitCount() + Integer.parseInt(txtUnitSize.getText()));
                     flag = 1;
                     populateFireDepartmentTable();
                     return;
                 } 
                 
                 
             }
                
                if(flag == 0){
                    System.out.println("check f");
                FireDepartment fireDepartment = ecoSystem.getFireDepartmentDirectory().addFireDepartment()  ;
                fireDepartment.setFireDepartmentType(unitTypeComboBox.getSelectedItem().toString());  
                fireDepartment.setUnitCount(Integer.parseInt(txtUnitSize.getText()));
                populateFireDepartmentTable();
                }
            
            }
             populateFireDepartmentTable();
//            FireDepartment fireDepartment = ecoSystem.getFireDepartmentDirectory().addFireDepartment()  ;
//            
//            
//            
//            
//            
//             
//            
//             if(flag == 0){
//             FireDepartmentDirectory fireDepartmentDirectory = new FireDepartmentDirectory();
//             fireDepartment.setFireDepartmentType(unitTypeComboBox.getSelectedItem().toString());  
//            fireDepartment.setUnitCount(Integer.parseInt(txtUnitSize.getText())); 
//             }
//            
//
//            populateFireDepartmentTable();

            //            CommunityBloodRequest communityBloodRequest = new CommunityBloodRequest();
            //            communityBloodRequest.setBloodType(bloodBank);
            //
            //            CommunityDonationRequest communityDonationRequest = new CommunityDonationRequest();
            //            communityDonationRequest.setBloodType(bloodBank);
            //
            //            txtUnitType.setText("");
            //bloodDonationAdd();

        }else{
            JOptionPane.showMessageDialog(null, "Enter value", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddDoctorActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctorActionPerformed
        // TODO add your handling code here:
        int selectedRow= tblPolice.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select the row to delete the police details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{

            FireDepartment p=(FireDepartment) tblPolice.getValueAt(selectedRow, 0);

            ecoSystem.getFireDepartmentDirectory().removeFireDepartment(p); ;
            JOptionPane.showMessageDialog(null, "You have successfully deleted the police details");
           populateFireDepartmentTable();
        }
    }//GEN-LAST:event_btnDeleteDoctorActionPerformed

    private void populateFireDepartmentTable() {
     DefaultTableModel table= (DefaultTableModel) tblPolice.getModel();
     table.setRowCount(0);
      for (FireDepartment fireDepartment : ecoSystem.getFireDepartmentDirectory().getFireDepartmentList() ) {
            
           Object[] row = new Object[2];
           row[0]= fireDepartment;
           row[1]=fireDepartment.getUnitCount() ;
           table.addRow(row);
    }  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDoctor;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteDoctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPolice;
    private javax.swing.JTextField txtUnitSize;
    private javax.swing.JComboBox<String> unitTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
